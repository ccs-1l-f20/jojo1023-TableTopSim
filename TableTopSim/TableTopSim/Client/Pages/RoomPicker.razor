@using TableTopSim.Shared;
@using DataLayer;
@using TableTopSim.Client.Components;
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject GlobalData GlobalData
@inject Uri WebSocketUri


<TextEdit Text="@playerName" TextChanged="NameChange" MaxLength="100" Placeholder="Name" Style="width:300px" />

<br />

@if (validName)
{
    <Button Clicked="NewRoomClick" Color="Color.Primary">Create New Room</Button>
}
else
{
    <Button Clicked="NewRoomClick" Color="Color.Primary" disabled>Create New Room</Button>
}

<br />
<p>Or</p>

<Addons>
    <Addon AddonType="AddonType.Start">
        @if (validName)
        {
            <Button Clicked="JoinRoomClick" Color="Color.Primary">Join Room</Button>
        }
        else
        {
            <Button Clicked="JoinRoomClick" Color="Color.Primary" disabled>Join Room</Button>
        }
    </Addon>
    <Addon AddonType="AddonType.End">
        <NumericEdit TValue="int" @bind-value="roomID" Placeholder="Room Id" />
    </Addon>
</Addons>

@code {
    bool validName = false;
    string playerName = "";
    int roomID = 0;

    async void NewRoomClick()
    {
        //generate room and get player id

        //var prId = await ReTryer.Try(100, 5, async () => await RoomDL.CreatePlayerAndRoom(Http, playerName));

        var ws = GlobalData.CreateWebSocket(WebSocketUri);
        await ws.Connect();
        var prId = await WebSocketMessages.CreateRoom(ws, playerName);// await ReTryer.Try(100, 5, async () => await WebSocketMessages.CreateRoom(ws, playerName));
        if (prId == null)
        {
            GlobalData.ShowMessage("An Error Has Occured");
        }
        else
        {
            NavigationManager.NavigateTo($"Lobby/{prId.RoomId}/{prId.PlayerId}");
        }
    }
    async void JoinRoomClick()
    {
        //validate room id and get player id
        int? playerId = await ReTryer.Try(100, 5, async () => await RoomDL.CreatePlayerInRoom(Http, playerName, roomID));
        if (playerId != null)
        {
            NavigationManager.NavigateTo($"Lobby/{roomID}/{playerId.Value}");
        }
        else
        {
            GlobalData.ShowMessage($"There Is No Open Room: {roomID}");
        }

    }
    bool ValidName(string name)
    {
        validName = name.Trim().Length > 0;
        return validName;
    }

    void NameChange(string name)
    {
        if (ValidName(name))
        {
            playerName = name;
        }
    }
}
