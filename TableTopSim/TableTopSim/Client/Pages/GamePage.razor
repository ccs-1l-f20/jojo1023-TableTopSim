@page "/Game/{RoomId:int}/{PlayerId:int}"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject GlobalData GlobalData
@using TableTopSim.Client.GameLibComponents
@using TableTopSim.Client.SpecificGame
@using GameLib
@using TableTopSim.Shared
@using DataLayer
@using System.Threading;
@inject Uri WebSocketUri

<img src="/images/cardBack.png" asp-append-version="true" @ref="CardBack" style="display:none" />
<img src="/images/Chess_kdt45.svg" asp-append-version="true" @ref="King" style="display:none" />
<img src="/images/Chess_qdt45.svg" asp-append-version="true" @ref="Queen" style="display:none" />

@if (gameProgram != null) 
{
<Game Size="size" Cts="cts" GameManager="gameProgram.Manager" @ref="gameComponent" />
}
@code {
    [Parameter]
    public int PlayerId { get; set; }
    [Parameter]
    public int RoomId { get; set; }
    ElementReference CardBack;
    ElementReference King;
    ElementReference Queen;
    Game gameComponent;
    GameProgram gameProgram;
    Player thisPlayer;
    GameLib.Size size = new GameLib.Size(1000, 1000);
    CancellationTokenSource cts = new CancellationTokenSource();
    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
        thisPlayer = await GlobalData.ReconnectWebSocket(WebSocketUri, PlayerId);
        if (thisPlayer == null)
        {
            GlobalData.ShowMessage($"The Player Does Not Exist");
            cts.Cancel();
            NavigationManager.NavigateTo("");
            return;
        }
        else if (thisPlayer.RoomId == null)
        {
            GlobalData.ShowMessage($"The Player Is Not In A Room");
            cts.Cancel();
            NavigationManager.NavigateTo("");
            return;
        }
        else if (thisPlayer.RoomId != RoomId)
        {
            GlobalData.ShowMessage($"The Player Is Not In Room: {RoomId}");
            cts.Cancel();
            NavigationManager.NavigateTo("");
            return;
        }
        else if (thisPlayer.RoomOpen)
        {
            GlobalData.ShowMessage($"The Game Has Not Started Yet");
            cts.Cancel();
            NavigationManager.NavigateTo($"Lobby/{RoomId}/{PlayerId}");
            return;
        }


        gameProgram = new GameProgram(size, GlobalData.WebSocket, RoomId);
    }
    void OnLocationChanged(object sender, LocationChangedEventArgs args)
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        gameProgram.Dispose();
        cts.Cancel();
    }

}
